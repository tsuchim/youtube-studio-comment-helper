name: Build and attach release artifact

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to create/update release for (e.g. v0.2.4)'
        required: true

permissions:
  contents: write
  packages: write
  issues: write

concurrency:
  group: release-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Resolve tag name
        id: resolve_tag
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG_NAME="${GITHUB_REF#refs/tags/}"
          else
            if [ -z "${{ inputs.tag }}" ]; then
              echo "Input 'tag' is required when not running on a tag ref" >&2
              exit 1
            fi
            TAG_NAME="${{ inputs.tag }}"
          fi
          echo "tag_name=$TAG_NAME" >> "$GITHUB_OUTPUT"

      - name: Checkout target tag
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: refs/tags/${{ steps.resolve_tag.outputs.tag_name }}

      - name: Sync manifest version to package.json (pre-check)
        run: npm run version:sync

      - name: Verify versions and tag (fail-fast)
        run: node scripts/check-version-tag.js
        env:
          # Make the checker believe it's running on the resolved tag, so it validates tag==package.json
          GITHUB_REF: refs/tags/${{ steps.resolve_tag.outputs.tag_name }}

      - name: Install dependencies
        run: npm ci

      - name: Build zip
        run: npm run build:zip

      - name: Derive version and expected zip name
        id: meta
        run: |
          PKG_VERSION=$(node -p "require('./package.json').version")
          echo "pkg_version=$PKG_VERSION" >> $GITHUB_OUTPUT
          ZIP=dist/youtube-studio-comment-helper-v$PKG_VERSION.zip
          if [ ! -f "$ZIP" ]; then
            echo "Archive $ZIP not found" >&2
            exit 1
          fi
          echo "zip_path=$ZIP" >> $GITHUB_OUTPUT

      - name: Generate SHA256 checksum
        run: |
          sha256sum "${{ steps.meta.outputs.zip_path }}" > "${{ steps.meta.outputs.zip_path }}.sha256"

      - name: Upload artifact (workflow run)
        uses: actions/upload-artifact@v4
        with:
          name: youtube-studio-comment-helper-${{ steps.meta.outputs.pkg_version }}
          path: |
            ${{ steps.meta.outputs.zip_path }}
            ${{ steps.meta.outputs.zip_path }}.sha256

      - name: Create or update GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ steps.resolve_tag.outputs.tag_name }}
          name: ${{ steps.resolve_tag.outputs.tag_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            ${{ steps.meta.outputs.zip_path }}
            ${{ steps.meta.outputs.zip_path }}.sha256
        # GITHUB_TOKEN is passed via `with.token`; no env duplication needed
